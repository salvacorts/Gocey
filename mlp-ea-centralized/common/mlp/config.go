package mlp

import (
	mn "github.com/salvacorts/go-perceptron-go/model/neural"
	"github.com/sirupsen/logrus"
)

// Config stores the configuration for evaluation
// and creation of new MLP
var Config MLPConfig

// Log is the logger for the MLP
var Log *logrus.Logger = logrus.New()

// TransferFunction stands for a transfer function
type TransferFunction = func(float64) float64

// MLPFactoryConfig is a type to create a factory of MLP randomly initialized
type MLPFactoryConfig struct {
	// Network topology
	InputLayers      int
	OutputLayers     int
	MinHiddenNeurons int
	MaxHiddenNeurons int
	Tfunc            TransferFunc

	// Training Info configuration
	MaxLR float64
	MinLR float64
}

// MLPConfig Stores the common variables for training and evaluating all MLPs generated by the EA
type MLPConfig struct {
	Epochs      int
	TrainEpochs int
	Folds       int
	Classes     []string
	TrainingSet []mn.Pattern
	FactoryCfg  MLPFactoryConfig

	// For inside the mutation operator
	MutateRate float64
}
