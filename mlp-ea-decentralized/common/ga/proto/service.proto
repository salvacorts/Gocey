syntax = "proto3";

package ga;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/golang/protobuf/ptypes/empty/empty.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;

// For tests
option (gogoproto.testgen_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.populate_all) = true;

message Individual {
    string individualID = 2;
    bool evaluated = 3;
    double fitness = 4;
    bytes genome = 5;
}

message Stats {
    int64 evaluations = 2;
    double bestFitness = 3;
    double avgFitness = 4;
}

message ProblemDescription {
    string clientID = 1;
    bytes payload = 2;
}

message NodeMetadata {
    int64 grpcPort = 1;
    int64 grpcWsPort = 2;
}

service DistributedEA {
    rpc GetProblemDescription(google.protobuf.Empty) returns (ProblemDescription) {}

    rpc GetStats(google.protobuf.Empty) returns (Stats) {}

    rpc BorrowIndividual(google.protobuf.Empty) returns (Individual) {}

    rpc ReturnIndividual(Individual) returns (google.protobuf.Empty) {}
}